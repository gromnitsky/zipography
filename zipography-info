#!/usr/bin/env ruby

require_relative './lib'
include Zipography

eocd = eocd_parse ARGV[0], eocd_position(ARGV[0])

header = File.open(ARGV[0], 'rb') do |f|
  f.seek eocd[:cd_offset_start] - HIDDEN_BLOB_HEADER_SIZE
  HiddenBlobHeader.read f
end

puts "Payload size:    #{header[:len]}"
puts "Adler32:         " + adler2hex(header[:checksum])
puts "Blob version:    #{header[:version]}"

checksum = adler32_file_slice ARGV[0], eocd[:cd_offset_start]-HIDDEN_BLOB_HEADER_SIZE-header.len, header.len

if checksum == header[:checksum]
  puts "Valid:           true"
else
  puts "Valid:           false, invalid checksum #{adler2hex(checksum)}"
  exit 1
end
