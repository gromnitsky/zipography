#!/usr/bin/env ruby

require_relative './lib'
include Zipography

output = options 'orig.zip blob [-o new.zip]', 2

# 0. get EOCD
eocd_pos = eocd_position ARGV[0]
eocd = eocd_parse ARGV[0], eocd_position(eocd_pos)

# 1. check a would-be zip size
oo = cd_offset_start_overflow ARGV[1], eocd[:cd_offset_start]
fail "`#{ARGV[1]}` is too big: #{oo} extra byte(s)" if oo > 0

File.open(ARGV[0], 'rb') do |f|
  # 2. Copy everything before CDH
  IO.copy_stream f, output, eocd[:cd_offset_start]

  # 3. Inject our blob
  blob_size = blob_write ARGV[1], output

  # 4. Copy CDH
  f.seek eocd[:cd_offset_start]
  IO.copy_stream f, output, eocd_pos - eocd[:cd_offset_start]

  # 5. Add an updated EOCD
  eocd[:cd_offset_start] += blob_size
  output.write eocd.to_binary_s
end
